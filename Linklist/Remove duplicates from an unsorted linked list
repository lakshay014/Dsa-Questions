Given an unsorted linked list of N nodes. The task is to remove duplicate elements from this unsorted Linked List.
When a value appears in multiple nodes, the node which appeared first should be kept, all others duplicates are to be removed.

Example 1:

Input:
N = 4
value[] = {5,2,2,4}
Output: 5 2 4


code : -  


class Solution
{
    public:
    //Function to remove duplicates from unsorted linked list.
    Node * removeDuplicates( Node *head) 
    {
     map<int,int> m;
     Node *curr=head;
     m[curr->data]=1;
     Node *prev=curr;
     curr=curr->next;
     while(curr!=NULL)
     {
         if(m[curr->data])
         {
             prev->next=curr->next;
             free(curr);
         }
         else
         {
         m[curr->data]=1;
         prev=curr;
         }
         curr=prev->next;
     }
     return head;
     
    }
};
