Given an integer array a[ ] of N elements and an integer K, the task is to check if the array a[ ] could be divided into K non-empty subsets with equal sum of elements.
Note: All elements of this array should be part of exactly one partition.

Example 1:

Input: 
N = 5
a[] = {2,1,4,5,6}
K = 3
Output: 
1
Explanation: we can divide above array 
into 3 parts with equal sum as (2, 4), 
(1, 5), (6)
Example 2:

Input: 
N = 5 
a[] = {2,1,5,5,6}
K = 3
Output: 
0
Explanation: It is not possible to divide
above array into 3 parts with equal sum.



//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
/*You are required to complete this method */

class Solution{
  public:
  void helper(int a[],int n,int k,vector<bool> &vis,bool &ans,int val,int curr,int count)
  {
      if(count==k-1)
      {
          ans=true;
          return;
      }
      
      if(curr > val)
      return;
      if(curr==val)
      {
          return helper(a,n,k,vis,ans,val,0,count+1);
          if(ans==true)
          return;
      }
      
      for(int i=0;i<n;i++)
      {
          if(vis[i]==false)
          {
              vis[i]=true;
              helper(a,n,k,vis,ans,val,curr+a[i],count);
              if(ans==true)
              return;
              
              vis[i]=false;
          }
      }
  }
    bool isKPartitionPossible(int a[], int n, int k)
    {
         //Your code here
         if(k==1)
         return true;
         
         if(k>n)
         return false;
         
         int sum=0;
         for(int i=0;i<n;i++)
         sum+=a[i];
         
         if(sum %k !=0)
         return false;
         
         vector<bool> vis(n,false);
         bool ans=false;
         
         helper(a,n,k,vis,ans,sum/k,0,0);
         return ans;
    }
};

//{ Driver Code Starts.
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
    	int n;
    	
    	cin>>n;
    	int a[n];
    	for(int i=0;i<n;i++)
    	cin>>a[i];
    	int k;
    	cin>>k;
    	Solution obj;
    	cout<<obj.isKPartitionPossible(a, n, k)<<endl;
    }
}
// } Driver Code Ends
