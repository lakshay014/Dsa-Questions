Given a string s and a dictionary of strings wordDict, return true if s can be segmented into a space-separated sequence of one or more dictionary words.

Note that the same word in the dictionary may be reused multiple times in the segmentation.

 

Example 1:

Input: s = "leetcode", wordDict = ["leet","code"]
Output: true
Explanation: Return true because "leetcode" can be segmented as "leet code".

Input: s = "catsandog", wordDict = ["cats","dog","sand","and","cat"]
Output: false



code : 

class Solution {
public:
    bool wordBreak(string s, vector<string>& wordDict) 
    {
        set<string> word_set(wordDict.begin(), wordDict.end());

        vector<bool> dp(s.length()+1,false);

        dp[0]=true;

        for(int i=1;i<=s.length();i++)
        {
            for(int j=0;j<i;j++)
            {
                if(dp[j]==true && word_set.find(s.substr(j,i-j))!=word_set.end())
                {
                    dp[i]=true;
                    break;
                }
            }
        }
        return dp[s.length()];
    }

};
